name: SonarQube Analysis

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'project-backend-velas-r-a-p/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'project-backend-velas-r-a-p/**'

jobs:
  test-and-analyze:
    name: 'Test & SonarQube Analysis'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: project-backend-velas-r-a-p

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Clear npm cache and install dependencies
      run: |
        npm cache clean --force
        npm install --legacy-peer-deps

    - name: Run tests and combine coverage
      run: |
        chmod +x combine-coverage.sh
        ./combine-coverage.sh

    - name: Setup SonarQube Scanner
      uses: warchant/setup-sonar-scanner@v7

    - name: SonarQube Scan
      run: |
        sonar-scanner \
          -Dsonar.projectKey=velas-backend \
          -Dsonar.sources=src \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
          -Dsonar.coverage.exclusions=**/*.spec.ts,**/*.test.ts,**/test/**,**/tests/**
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-scan:
    name: 'Trivy Security Scan'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: project-backend-velas-r-a-p

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Clear npm cache and install dependencies
      run: |
        npm cache clean --force
        npm install --legacy-peer-deps

    - name: Build Docker image
      run: |
        docker build -t velas-backend:${{ github.sha }} .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'velas-backend:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'