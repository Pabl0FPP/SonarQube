name: SonarQube Analysis

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'project-backend-velas-r-a-p/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'project-backend-velas-r-a-p/**'

jobs:
  test-and-analyze:
    name: 'Test & SonarQube Analysis'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: project-backend-velas-r-a-p

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps

    - name: Debug directory structure
      run: |
        pwd
        ls -la
        ls -la test/ || echo "Test directory not found"

    - name: Run unit tests with coverage
      continue-on-error: true
      run: |
        echo "Running unit tests..."
        npx jest --coverage --coverageDirectory=coverage/unit || echo "Unit tests failed"
        ls -la coverage/ || echo "Coverage directory not created"

    - name: Run e2e tests with coverage
      continue-on-error: true
      run: |
        echo "Running e2e tests..."
        npx jest --config test/jest-e2e.json --coverage --coverageDirectory=coverage/e2e || echo "E2E tests failed"
        ls -la coverage/ || echo "Coverage directory still not found"

    - name: Combine coverage manually
      continue-on-error: true
      run: |
        echo "Creating coverage directory if not exists..."
        mkdir -p coverage
        if [ -f coverage/unit/lcov.info ]; then
          cp coverage/unit/lcov.info coverage/lcov-unit.info
          echo "Unit coverage copied"
        else
          echo "Unit coverage not found"
        fi
        if [ -f coverage/e2e/lcov.info ]; then
          cp coverage/e2e/lcov.info coverage/lcov-e2e.info
          echo "E2E coverage copied"
        else
          echo "E2E coverage not found"
        fi
        # Combine available coverage files
        cat coverage/lcov-*.info > coverage/lcov.info 2>/dev/null || echo "No coverage files to combine"

    - name: Verify coverage file exists
      run: |
        ls -la coverage/ || echo "Coverage directory not found"
        ls -la coverage/lcov.info || echo "lcov.info not found"
        pwd

    - name: Setup SonarQube Scanner
      uses: warchant/setup-sonar-scanner@v7

    - name: SonarQube Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: |
        sonar-scanner \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN

  security-scan:
    name: 'Trivy Security Scan'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: project-backend-velas-r-a-p
    
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Clear npm cache and install dependencies
      run: |
        npm cache clean --force
        npm install --legacy-peer-deps

    - name: Build Docker image
      run: |
        docker build -t velas-backend:${{ github.sha }} .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'velas-backend:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'